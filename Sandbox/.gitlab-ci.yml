stages:
    - build
    - test_1
    - report

build_image:
    stage: build
    script:
        - docker build -t image-test_1:$CI_COMMIT_SHORT_SHA --no-cache .
    when: manual

test_1_run:
    stage: test_1
    needs:
        - build_image
    script:
        - rm -rf /data/allure-results/*
        - docker run --rm
                     --name test_1 
                     -e MAIN_HOST=$MAIN_HOST
                     -e MAIN_PORT=$MAIN_PORT
                     -v /data/allure-results:/app/allure-results
                     image-test_1:$CI_COMMIT_SHORT_SHA
    after_script:
        - docker rmi image-test_1:$CI_COMMIT_SHORT_SHA
    allow_failure: true

create_report:
    stage: report
    needs:
        - test_1_run
    script:
        - curl "http://${MAIN_HOST}:${ALLURE_PORT}/generate-report"       
        - export REPORT_DATE=$(date +"%d-%m-%Y-%I:%M:%S")
        - export REPORT_DIR=$(ls -t /data/allure-reports | grep -i [0-9] | head -1)
        - curl -s -X POST https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d text="LAST REPORT-$REPORT_DATE - http://${MAIN_HOST}:${ALLURE_PORT}/projects/default/reports/$REPORT_DIR/index.html"
